name: CI/CD Pipeline with SSH Deployment

on:
  push:
    branches:
      - main  # Chạy khi có commit lên nhánh "main"
  pull_request:
    branches:
      - main  # Chạy trên Pull Request đến nhánh "main"

jobs:
  build-and-deploy:
    # Job thực hiện build & deploy Docker Image qua SSH
    runs-on: ubuntu-latest

    steps:
      # Bước 1: Checkout mã nguồn từ repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Bước 2: Set up JDK để build ứng dụng (nếu sử dụng Java)
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      # Bước 3: Build ứng dụng (nếu cần thiết)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      # Bước 4: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t tour-backend:latest .

      # Bước 5: Export Docker Image ra file .tar
      - name: Save Docker Image to File
        run: |
          docker save tour-backend:latest -o tour-backend.tar

      # Bước 6: Upload Docker Image tới server qua SSH
      - name: Upload Docker Image to Server
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}  # Địa chỉ IP hoặc tên miền của server
          username: ${{ secrets.SERVER_USERNAME }}  # Tài khoản SSH
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Private key
          port: 22  # Cổng SSH (thường là 22)
          source: "tour-backend.tar"  # File .tar cần truyền
          target: "~/tour-backend/"  # Đích trên server

      # Bước 7: SSH vào server và triển khai container từ Docker Image
      - name: Deploy Docker Container to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Tạo mạng 'tour-network' nếu nó chưa tồn tại
            if [ -z "$(docker network ls --filter name=^tour_network$ --format='{{ .Name }}')" ]; then
              docker network create tour_network
            fi
      
            # Nạp lại Docker image từ file tar
            docker load -i ~/tour-backend/tour-backend.tar

            # Dừng và xóa container cũ nếu đang chạy
            docker stop tour-backend || true
            docker rm tour-backend || true

            # Chạy container mới
            docker run -d \
              --name tour-backend \
              --env-file tour-backend/.env \
              -p 8080:8080 \
              --network tour_network \
              --restart always \
              tour-backend:latest

            # Xóa file tar sau khi hoàn tất
            rm -f ~/tour-backend/tour-backend.tar
